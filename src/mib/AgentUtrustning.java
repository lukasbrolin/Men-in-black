package mib;


import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;

/**
 *
 * @author Lukas Brolin, Daniel Antonsson, Jonatan Angergård
 */
public class AgentUtrustning extends javax.swing.JFrame {

    /**
     * Creates new form AgentUtrustning
     */
    public AgentUtrustning() {
        initComponents();
    }
    
    public void setAgentNamn(String agent)
    {
        lblAgentNamn.setText(agent);
    }
    
    private void clearBoxes()
    {
        txtBenamning.setText("");
        txtUtrustningsID.setText("");
        txtSokUtrustning.setText("");
    }
    
    /*
    * Listar  den inloggade Agentens utrustning
    */
    private void listaMinUtrustning()
    {
        try
        {
            String fraga= "SELECT UTRUSTNING.UTRUSTNINGS_ID, UTRUSTNING.BENAMNING FROM UTRUSTNING INNER JOIN INNEHAR_UTRUSTNING ON UTRUSTNING.UTRUSTNINGS_ID = INNEHAR_UTRUSTNING.UTRUSTNINGS_ID WHERE AGENT_ID = " + Inloggad.getIDInloggad() + "";
            ArrayList<HashMap<String,String>> lista = (DataBaseConnection.getDB().fetchRows(fraga));
            DefaultListModel<String> model = new DefaultListModel<>();
            lstAdminMinUtrustning.setModel(model);

            for(HashMap<String, String> map: lista)
            {
                for(String key : map.keySet())
                {
                    model.addElement(map.get(key));
                }
                String newRow = "-------------------------------------------------";
                model.addElement(newRow);
            }

        }
        catch(Exception e)
        {

        }
        clearBoxes();
    }
    
    /*
    * Listar all utrustning registrerad i systemet
    */
    private void listaAllUtrustning()
    {
        
        try
        {

            String fraga= "SELECT BENAMNING, UTRUSTNINGS_ID FROM UTRUSTNING";
            ArrayList<HashMap<String,String>> lista = (DataBaseConnection.getDB().fetchRows(fraga));
            DefaultListModel<String> model = new DefaultListModel<>();
            lstAdminUtrustning.setModel(model);

            for(HashMap<String, String> map: lista)
            {
                int i = 0;
                for(String key : map.keySet())
                {
                    model.addElement(map.get(key));
                    if(i==1)
                    {
                        String agentFraga = "SELECT NAMN FROM AGENT JOIN INNEHAR_UTRUSTNING ON AGENT.AGENT_ID = INNEHAR_UTRUSTNING.AGENT_ID WHERE INNEHAR_UTRUSTNING.UTRUSTNINGS_ID = " + map.get(key);
                        String agentSvar = DataBaseConnection.getDB().fetchSingle(agentFraga);
                        if(agentSvar == null)
                        {
                            model.addElement("Ej utkvitterad");
                        }
                        else
                        {
                            model.addElement("Utkvitterad av: " + DataBaseConnection.getDB().fetchSingle(agentFraga));
                        }

                    }
                    i++;
                }
                String newRow = "-------------------------------------------------";
                model.addElement(newRow);
                clearBoxes();
            }

        }
        catch(Exception e)
        {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFonster = new javax.swing.JPanel();
        pnlBorderTop = new javax.swing.JPanel();
        lblRubrik = new javax.swing.JLabel();
        lblAgentIkon = new javax.swing.JLabel();
        lblAgentNamn = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        pnlBorderBottom = new javax.swing.JPanel();
        lblValjUtrustning = new javax.swing.JLabel();
        btnSok = new javax.swing.JButton();
        lblUtrustningsID = new javax.swing.JLabel();
        lblBenamning = new javax.swing.JLabel();
        txtUtrustningsID = new javax.swing.JTextField();
        txtBenamning = new javax.swing.JTextField();
        txtSokUtrustning = new javax.swing.JTextField();
        btnRegistreraUtrustning = new javax.swing.JButton();
        lblInstruktioner = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        scpLista = new javax.swing.JScrollPane();
        lstAdminUtrustning = new javax.swing.JList<>();
        scpMinUtrustning = new javax.swing.JScrollPane();
        lstAdminMinUtrustning = new javax.swing.JList<>();
        btnListaMinUtrustning = new javax.swing.JButton();
        btnAterlamnaUtrustning = new javax.swing.JButton();
        btnUtkvitteraUtrustning = new javax.swing.JButton();
        btnListaAlla1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlFonster.setBackground(new java.awt.Color(255, 255, 255));
        pnlFonster.setMaximumSize(new java.awt.Dimension(1000, 600));
        pnlFonster.setMinimumSize(new java.awt.Dimension(1000, 600));

        pnlBorderTop.setBackground(new java.awt.Color(220, 220, 220));
        pnlBorderTop.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        pnlBorderTop.setMaximumSize(new java.awt.Dimension(1000, 80));
        pnlBorderTop.setMinimumSize(new java.awt.Dimension(1000, 80));

        lblRubrik.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        lblRubrik.setText("Utrustning");

        lblAgentIkon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mib/spy.png"))); // NOI18N

        lblAgentNamn.setFont(new java.awt.Font("Open Sans", 1, 12)); // NOI18N
        lblAgentNamn.setText("Agent K");

        btnHome.setBackground(new java.awt.Color(220, 220, 220));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mib/home.png"))); // NOI18N
        btnHome.setBorder(null);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBorderTopLayout = new javax.swing.GroupLayout(pnlBorderTop);
        pnlBorderTop.setLayout(pnlBorderTopLayout);
        pnlBorderTopLayout.setHorizontalGroup(
            pnlBorderTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBorderTopLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRubrik)
                .addGap(309, 309, 309)
                .addComponent(lblAgentIkon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAgentNamn)
                .addGap(15, 15, 15))
        );
        pnlBorderTopLayout.setVerticalGroup(
            pnlBorderTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBorderTopLayout.createSequentialGroup()
                .addGroup(pnlBorderTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlBorderTopLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAgentNamn)
                        .addGap(14, 14, 14))
                    .addGroup(pnlBorderTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlBorderTopLayout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(lblRubrik))
                        .addGroup(pnlBorderTopLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addGroup(pnlBorderTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblAgentIkon)))))
                .addGap(7, 7, 7))
        );

        pnlBorderBottom.setBackground(new java.awt.Color(220, 220, 220));
        pnlBorderBottom.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        pnlBorderBottom.setMaximumSize(new java.awt.Dimension(1000, 40));
        pnlBorderBottom.setMinimumSize(new java.awt.Dimension(1000, 40));

        javax.swing.GroupLayout pnlBorderBottomLayout = new javax.swing.GroupLayout(pnlBorderBottom);
        pnlBorderBottom.setLayout(pnlBorderBottomLayout);
        pnlBorderBottomLayout.setHorizontalGroup(
            pnlBorderBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        pnlBorderBottomLayout.setVerticalGroup(
            pnlBorderBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        lblValjUtrustning.setFont(new java.awt.Font("Open Sans Semibold", 0, 12)); // NOI18N
        lblValjUtrustning.setText("Sök Utrustning:");

        btnSok.setBackground(new java.awt.Color(255, 255, 255));
        btnSok.setFont(new java.awt.Font("Open Sans Semibold", 0, 12)); // NOI18N
        btnSok.setText("Sök");
        btnSok.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnSok.setContentAreaFilled(false);
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblUtrustningsID.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        lblUtrustningsID.setText("Utrustnings ID:");

        lblBenamning.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        lblBenamning.setText("Benämning:");

        txtUtrustningsID.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txtUtrustningsID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUtrustningsID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUtrustningsIDActionPerformed(evt);
            }
        });

        txtBenamning.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txtBenamning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtSokUtrustning.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        txtSokUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSokUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSokUtrustningActionPerformed(evt);
            }
        });
        txtSokUtrustning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSokUtrustningKeyPressed(evt);
            }
        });

        btnRegistreraUtrustning.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistreraUtrustning.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        btnRegistreraUtrustning.setText("Registrera ny utrustning");
        btnRegistreraUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnRegistreraUtrustning.setContentAreaFilled(false);
        btnRegistreraUtrustning.setMaximumSize(new java.awt.Dimension(75, 30));
        btnRegistreraUtrustning.setMinimumSize(new java.awt.Dimension(75, 30));
        btnRegistreraUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistreraUtrustningActionPerformed(evt);
            }
        });

        lblInstruktioner.setFont(new java.awt.Font("Open Sans Semibold", 2, 12)); // NOI18N
        lblInstruktioner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInstruktioner.setText("Registrera Utrustning");
        lblInstruktioner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator4.setPreferredSize(new java.awt.Dimension(1, 10));

        scpLista.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lstAdminUtrustning.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAdminUtrustningValueChanged(evt);
            }
        });
        scpLista.setViewportView(lstAdminUtrustning);

        scpMinUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lstAdminMinUtrustning.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstAdminMinUtrustningValueChanged(evt);
            }
        });
        scpMinUtrustning.setViewportView(lstAdminMinUtrustning);

        btnListaMinUtrustning.setBackground(new java.awt.Color(255, 255, 255));
        btnListaMinUtrustning.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        btnListaMinUtrustning.setText("Lista min utrustning");
        btnListaMinUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnListaMinUtrustning.setContentAreaFilled(false);
        btnListaMinUtrustning.setMaximumSize(new java.awt.Dimension(75, 30));
        btnListaMinUtrustning.setMinimumSize(new java.awt.Dimension(75, 30));
        btnListaMinUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaMinUtrustningActionPerformed(evt);
            }
        });

        btnAterlamnaUtrustning.setBackground(new java.awt.Color(255, 255, 255));
        btnAterlamnaUtrustning.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        btnAterlamnaUtrustning.setText("Återlämna utrustning");
        btnAterlamnaUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnAterlamnaUtrustning.setContentAreaFilled(false);
        btnAterlamnaUtrustning.setMaximumSize(new java.awt.Dimension(75, 30));
        btnAterlamnaUtrustning.setMinimumSize(new java.awt.Dimension(75, 30));
        btnAterlamnaUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAterlamnaUtrustningActionPerformed(evt);
            }
        });

        btnUtkvitteraUtrustning.setBackground(new java.awt.Color(255, 255, 255));
        btnUtkvitteraUtrustning.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        btnUtkvitteraUtrustning.setText("Utkvittera utrustning");
        btnUtkvitteraUtrustning.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnUtkvitteraUtrustning.setContentAreaFilled(false);
        btnUtkvitteraUtrustning.setMaximumSize(new java.awt.Dimension(75, 30));
        btnUtkvitteraUtrustning.setMinimumSize(new java.awt.Dimension(75, 30));
        btnUtkvitteraUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUtkvitteraUtrustningActionPerformed(evt);
            }
        });

        btnListaAlla1.setBackground(new java.awt.Color(255, 255, 255));
        btnListaAlla1.setFont(new java.awt.Font("Open Sans Semibold", 0, 14)); // NOI18N
        btnListaAlla1.setText("Lista all utrustning");
        btnListaAlla1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        btnListaAlla1.setContentAreaFilled(false);
        btnListaAlla1.setMaximumSize(new java.awt.Dimension(75, 30));
        btnListaAlla1.setMinimumSize(new java.awt.Dimension(75, 30));
        btnListaAlla1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaAlla1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFonsterLayout = new javax.swing.GroupLayout(pnlFonster);
        pnlFonster.setLayout(pnlFonsterLayout);
        pnlFonsterLayout.setHorizontalGroup(
            pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFonsterLayout.createSequentialGroup()
                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlBorderBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBorderTop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFonsterLayout.createSequentialGroup()
                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFonsterLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnListaAlla1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnListaMinUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFonsterLayout.createSequentialGroup()
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addGap(214, 214, 214)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFonsterLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(170, 170, 170))
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUtrustningsID)
                                    .addComponent(lblBenamning))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUtrustningsID)
                                    .addComponent(txtBenamning)
                                    .addComponent(lblInstruktioner, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                    .addComponent(btnRegistreraUtrustning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(88, 88, 88)))
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addComponent(scpLista, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scpMinUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFonsterLayout.createSequentialGroup()
                                .addComponent(lblValjUtrustning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSokUtrustning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSok, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFonsterLayout.createSequentialGroup()
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addContainerGap(747, Short.MAX_VALUE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFonsterLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUtkvitteraUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(btnAterlamnaUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        pnlFonsterLayout.setVerticalGroup(
            pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFonsterLayout.createSequentialGroup()
                .addComponent(pnlBorderTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValjUtrustning)
                    .addComponent(txtSokUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSok))
                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFonsterLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lblInstruktioner)
                        .addGap(18, 18, 18)
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUtrustningsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUtrustningsID))
                        .addGap(18, 18, 18)
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBenamning))
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistreraUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE))
                    .addGroup(pnlFonsterLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scpMinUtrustning, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                            .addComponent(scpLista))
                        .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28))
                            .addGroup(pnlFonsterLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAterlamnaUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUtkvitteraUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGroup(pnlFonsterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnListaMinUtrustning, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(btnListaAlla1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addComponent(pnlBorderBottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFonster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFonster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    *   Söker på specifik utrustning i systemet som inte godtar Utrustnings_ID
    */
    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        if(Validation.isNotEmpty(txtSokUtrustning) && Validation.isNotHelTal(txtSokUtrustning))
        {
        try
        {
            String sokOrd = txtSokUtrustning.getText().toLowerCase();
            String fraga = "Select Utrustnings_id, benamning from utrustning";
            ArrayList<HashMap<String, String>> lista = (DataBaseConnection.getDB().fetchRows(fraga));
            DefaultListModel<String> model = new DefaultListModel<>();
            lstAdminUtrustning.setModel(model);
            for(HashMap<String, String> map: lista)
            {
                Boolean skrivitsUt = false;
                for(String key : map.keySet())
                {
                    
                    String utrustning = map.get(key).toLowerCase();
                    
                    if(utrustning.contains(sokOrd) && !sokOrd.matches("[0-9]+"))
                    {
                        model.addElement(map.get(key));
                        skrivitsUt = true;
                    }
                    else if(map.get(key).matches("[0-9]+") && skrivitsUt == true)
                    {
                        model.addElement(map.get(key));
   
                        String agentFraga = "SELECT NAMN FROM AGENT JOIN INNEHAR_UTRUSTNING ON AGENT.AGENT_ID = INNEHAR_UTRUSTNING.AGENT_ID WHERE INNEHAR_UTRUSTNING.UTRUSTNINGS_ID = " + map.get(key);
                        String agentSvar = DataBaseConnection.getDB().fetchSingle(agentFraga);
                        if(agentSvar == null)
                        {
                            model.addElement("Ej utkvitterad");
                        }
                        else
                        {
                            model.addElement("Utkvitterad av: " + DataBaseConnection.getDB().fetchSingle(agentFraga));
                        }
                    }
                    
                }
                if(skrivitsUt == true)
                {
                String newRow = "-------------------------------------------------";
                model.addElement(newRow);
                }
            }          
        }
        catch(Exception e)
        {
            
        }
        }
    }//GEN-LAST:event_btnSokActionPerformed

    private void txtUtrustningsIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUtrustningsIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUtrustningsIDActionPerformed

    private void txtSokUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSokUtrustningActionPerformed
        
    }//GEN-LAST:event_txtSokUtrustningActionPerformed

    private void btnRegistreraUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistreraUtrustningActionPerformed
        
        if(Validation.isNotEmpty(txtUtrustningsID) && Validation.isNotEmpty(txtBenamning) && Validation.isHeltal(txtUtrustningsID) && Validation.isNotHelTal(txtBenamning))
        {    
            try{
        
                int nyttID = Integer.parseInt(txtUtrustningsID.getText());
                String benamning = txtBenamning.getText().substring(0,1).toUpperCase();
                String benamning2 = txtBenamning.getText().substring(1);
                String benamning3 = benamning + benamning2;
                String fraga = "INSERT INTO UTRUSTNING VALUES (" + nyttID + ", '" + benamning3 + "')";
                InfDB databas = DataBaseConnection.getDB();
        
                    databas.insert(fraga);
                    JOptionPane.showMessageDialog(null, "Utrustningen har lagts till!");
                    
                }
             catch(InfException e)
            {
                System.out.println(e);
            }
            listaAllUtrustning();
        }
    else
        {
            
        }
    }//GEN-LAST:event_btnRegistreraUtrustningActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        AgentHome obj = new AgentHome();
        obj.setVisible(true);
        obj.setLocationRelativeTo(this);
        obj.setRubrikAgent(Inloggad.getNameInloggad());
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void txtSokUtrustningKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSokUtrustningKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            btnSok.doClick();
        }
    }//GEN-LAST:event_txtSokUtrustningKeyPressed

    private void lstAdminUtrustningValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAdminUtrustningValueChanged

    }//GEN-LAST:event_lstAdminUtrustningValueChanged

    private void lstAdminMinUtrustningValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstAdminMinUtrustningValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstAdminMinUtrustningValueChanged

    private void btnListaMinUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaMinUtrustningActionPerformed
        listaMinUtrustning();
    }//GEN-LAST:event_btnListaMinUtrustningActionPerformed

    private void btnAterlamnaUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAterlamnaUtrustningActionPerformed
        if(Validation.isNotSelected(lstAdminMinUtrustning))
        if(Validation.startsWithString(lstAdminMinUtrustning, "----") || Validation.containsWithString(lstAdminMinUtrustning, "kvittera"))
        {                
        }
        else
        try
        {
            String valLista = lstAdminMinUtrustning.getSelectedValue();
            InfDB databas = DataBaseConnection.getDB();
            if(valLista != null)
            {

                if (valLista.matches("[0-9]+"))
                {
                    String deleteFraga = "DELETE FROM INNEHAR_UTRUSTNING WHERE UTRUSTNINGS_ID = " + valLista;
                    databas.delete(deleteFraga);
                    JOptionPane.showMessageDialog(null, "Utrustningen har återlämnats!");

                }
                String benamningFraga = "SELECT BENAMNING FROM UTRUSTNING";
                ArrayList<HashMap<String,String>> benamningSvar = DataBaseConnection.getDB().fetchRows(benamningFraga);
                for(HashMap<String,String> key : benamningSvar)
                {
                    for(String enStrang : key.keySet())
                    {
                        key.get(enStrang);
                        if(key.get(enStrang).equals(valLista))
                        {
                            String utrustningsIDFraga = "SELECT UTRUSTNINGS_ID FROM UTRUSTNING WHERE BENAMNING = '" + valLista + "'";
                            String utrustningsIDSvar = databas.fetchSingle(utrustningsIDFraga);
                            String deleteFraga = "DELETE FROM INNEHAR_UTRUSTNING WHERE UTRUSTNINGS_ID = " + utrustningsIDSvar;
                            databas.delete(deleteFraga);
                            JOptionPane.showMessageDialog(null, "Utrustningen har återlämnats!");
                            System.out.println(deleteFraga);
                        }

                    }
                }
            }

        }
        catch(Exception e)
        {

        }
        listaAllUtrustning();
        listaMinUtrustning();
    }//GEN-LAST:event_btnAterlamnaUtrustningActionPerformed

    private void btnUtkvitteraUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUtkvitteraUtrustningActionPerformed
        if(Validation.isNotSelected(lstAdminUtrustning))
        if(Validation.startsWithString(lstAdminUtrustning, "----") || Validation.containsWithString(lstAdminUtrustning, "kvittera"))
        {
        }
        else
        try
        {
            String valLista = lstAdminUtrustning.getSelectedValue();
            InfDB databas = DataBaseConnection.getDB();
            if(valLista != null)
            {

                if (valLista.matches("[0-9]+"))
                {
                    String insertFraga = "INSERT INTO INNEHAR_UTRUSTNING VALUES (" + Inloggad.getIDInloggad() + "," + valLista + ", '2020-01-01')";
                    System.out.println(insertFraga);

                    databas.insert(insertFraga);
                    JOptionPane.showMessageDialog(null, "Utrustningen har utkvitterats!");

                }
                String benamningFraga = "SELECT BENAMNING FROM UTRUSTNING";
                ArrayList<HashMap<String,String>> benamningSvar = DataBaseConnection.getDB().fetchRows(benamningFraga);
                for(HashMap<String,String> key : benamningSvar)
                {
                    for(String enStrang : key.keySet())
                    {
                        key.get(enStrang);
                        if(key.get(enStrang).equals(valLista))
                        {
                            String utrustningsIDFraga = "SELECT UTRUSTNINGS_ID FROM UTRUSTNING WHERE BENAMNING = '" + valLista + "'";
                            String utrustningsIDSvar = databas.fetchSingle(utrustningsIDFraga);
                            System.out.println(utrustningsIDSvar);
                            String insertFraga = "INSERT INTO INNEHAR_UTRUSTNING VALUES (" + Inloggad.getIDInloggad() + "," + utrustningsIDSvar + ", '2020-01-01')";
                            System.out.println(insertFraga);
                            databas.insert(insertFraga);
                            JOptionPane.showMessageDialog(null, "Utrustningen har utkvitterats!");
                        }
                        System.out.println(key.get(enStrang) + " " + valLista);

                    }
                }

            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Utrustningen är redan upptagen!");
        }
        listaAllUtrustning();
        listaMinUtrustning();
    }//GEN-LAST:event_btnUtkvitteraUtrustningActionPerformed


    private void btnListaAlla1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaAlla1ActionPerformed
        listaAllUtrustning();
    }//GEN-LAST:event_btnListaAlla1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentUtrustning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentUtrustning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAterlamnaUtrustning;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnListaAlla1;
    private javax.swing.JButton btnListaMinUtrustning;
    private javax.swing.JButton btnRegistreraUtrustning;
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnUtkvitteraUtrustning;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblAgentIkon;
    private javax.swing.JLabel lblAgentNamn;
    private javax.swing.JLabel lblBenamning;
    private javax.swing.JLabel lblInstruktioner;
    private javax.swing.JLabel lblRubrik;
    private javax.swing.JLabel lblUtrustningsID;
    private javax.swing.JLabel lblValjUtrustning;
    private javax.swing.JList<String> lstAdminMinUtrustning;
    private javax.swing.JList<String> lstAdminUtrustning;
    private javax.swing.JPanel pnlBorderBottom;
    private javax.swing.JPanel pnlBorderTop;
    private javax.swing.JPanel pnlFonster;
    private javax.swing.JScrollPane scpLista;
    private javax.swing.JScrollPane scpMinUtrustning;
    private javax.swing.JTextField txtBenamning;
    private javax.swing.JTextField txtSokUtrustning;
    private javax.swing.JTextField txtUtrustningsID;
    // End of variables declaration//GEN-END:variables
}
